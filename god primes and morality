---
title: "God Concept Study"
author: "Daniel Yi"
date: "September 25, 2018"
output: pdf_document
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

# Cleaning Data
```{r}
library(readr)
library(psych)
library(lavaan)
library(semTools)
gc.ds <- read_csv("~/Research Study/Studies/Religion and Morality Study/Data/thesis data.csv")

# Remove participants
gc.ds <- gc.ds[gc.ds$task_susp == 0,]   # remove suspicious participants (4)
gc.ds <- gc.ds[gc.ds$US == 0,]    # remove those outside of US (26)

# Transfer post god concept data unto pre god concept columns
  ## apItems -> aItems
    ### Create new function to transfer groups of item
    recodeFxn <- function(num,gc.ds){
    target <- paste0('a',num)
    sources <- c(target,paste0('ap',num))
    gc.ds[,target] <- rowSums(gc.ds[,sources],na.rm=TRUE)
    gc.ds
    }
        #### Transfer the data
        for(j in 1:9){
        gc.ds <- recodeFxn(j,gc.ds)
        }
  ## bpItems -> bItems
    ### Create new function to transfer groups of item
    recodeFxn <- function(num,gc.ds){
    target <- paste0('b',num)
    sources <- c(target,paste0('bp',num))
    gc.ds[,target] <- rowSums(gc.ds[,sources],na.rm=TRUE)
    gc.ds
    }
        #### Transfer the data
        for(j in 1:9){
        gc.ds <- recodeFxn(j,gc.ds)
        }

# Factor condition
gc.ds$cond <- factor(gc.ds$cond, labels = c("Authoritarian", "Benevolent"), levels = c(0,1))
# Create grouping variable
gc.ds$condB <- ifelse(gc.ds$cond == "Authoritarian",0, 1)

# Variables
aItems <- paste0("a", 1:9)
bItems <- paste0("b", 1:9)

careItems <- paste0("mfq", c(5,6,9,18,19,20))
fairItems <- paste0("mfq", c(7,13,14,22,27,31))
  indItems <- c(careItems, fairItems)
groupItems <- paste0("mfq", c(3,11,24,25,26))
authItems <- paste0("mfq", c(4,12,15,21,23,28))
pureItems <- paste0("mfq", c(2,8,10,16,17,29))
  bindItems <- c(groupItems, authItems, pureItems)

uniItems <- paste0("svs", c(1,5,8))
secItems <- paste0("svs", c(2,3,6,10))
tradItems <- paste0("svs", c(4,9,11))

hapItems <- paste0("deq", c(3,4,6,8))
angItems <- paste0("deq", c(1,2,5,7))

gc.ds$sex <- ifelse(gc.ds$sex == 2, 0,1)  # Re-code so 0=Female
gc.ds$ses <- 6-gc.ds$ses  # Reverse-score 1=poor; 5=rich
gc.ds$polaff <- 8-gc.ds$polaff  # Reverse-score 1=Lib; 7=Con
gc.ds$stp <- 8-gc.ds$stp  # Reverse-score 1=Atheist; 7=Theist

# Compute Means
gc.ds$aMeans <- rowMeans(gc.ds[,aItems], na.rm=TRUE)
gc.ds$bMeans <- rowMeans(gc.ds[,bItems], na.rm=TRUE)

gc.ds$careMeans <- rowMeans(gc.ds[,careItems], na.rm=TRUE)
gc.ds$fairMeans <- rowMeans(gc.ds[,fairItems], na.rm=TRUE)
gc.ds$groupMeans <- rowMeans(gc.ds[,groupItems], na.rm=TRUE)
gc.ds$authMeans <- rowMeans(gc.ds[,authItems], na.rm=TRUE)
gc.ds$pureMeans <- rowMeans(gc.ds[,pureItems], na.rm=TRUE)

gc.ds$uniMeans <- rowMeans(gc.ds[,uniItems], na.rm=TRUE)
gc.ds$secMeans <- rowMeans(gc.ds[,secItems], na.rm=TRUE)
gc.ds$tradMeans <- rowMeans(gc.ds[,tradItems], na.rm=TRUE)

gc.ds$hapMeans <- rowMeans(gc.ds[,hapItems], na.rm=TRUE)
gc.ds$angMeans <- rowMeans(gc.ds[,angItems], na.rm=TRUE)
```
# Demographics
```{r}
table(gc.ds$sex)  # 0=Female; 1=Male
mean(gc.ds$age, na.rm = TRUE)
table(gc.ds$race) # 1=AA; 2=AP; 3=H; 4=NA; 5=C; 6=Other
table(gc.ds$ses)  # 1=Lower; 3=Middle; 5=Upper
table(gc.ds$ed)   # 1=Some HS; 5=Post; 6=None of the above
table(gc.ds$for_pol)  # 1=Very liberal; 7=Very conservative
table(gc.ds$eco_pol)  # 1=Very liberal; 7=Very conservative
table(gc.ds$soc_pol)  # 1=Very liberal; 7=Very conservative
table(gc.ds$rel_pol)  # 1=Very liberal; 7=Very conservative
table(gc.ds$polaff) # 1=Very Liberal; 7=Very conservative
table(gc.ds$relaff) # 1=P; 2=C; 3=B; 4=H; 5=J; 6=M; 7=None; 8=Ath; 9=Agn; 10=other
table(gc.ds$stp)  # 1=Strong Atheist; 4=Impartial; 7=Strong Theist
table(gc.ds$pray) # 1=Never; 6=1+/day
table(gc.ds$relserv)  # 1=Never; 6=1+/week
table(gc.ds$relint) # 1=Not at all; 5=Moderately; 9=Extremely
```
# Scale variables
```{r}
gc.ds[,aItems] <- scale(gc.ds[,aItems])
gc.ds[,bItems] <- scale(gc.ds[,bItems])

gc.ds[,careItems] <- scale(gc.ds[,careItems])
gc.ds[,fairItems] <- scale(gc.ds[,fairItems])
gc.ds[,groupItems] <- scale(gc.ds[,groupItems])
gc.ds[,authItems] <- scale(gc.ds[,authItems])
gc.ds[,pureItems] <- scale(gc.ds[,pureItems])

gc.ds[,uniItems] <- scale(gc.ds[,uniItems])
gc.ds[,secItems] <- scale(gc.ds[,secItems])
gc.ds[,tradItems] <- scale(gc.ds[,tradItems])

gc.ds[,hapItems] <- scale(gc.ds[,hapItems])
gc.ds[,angItems] <- scale(gc.ds[,angItems])

gc.ds$stp <- scale(gc.ds$stp)
gc.ds$pray <- scale(gc.ds$pray)
gc.ds$relserv <- scale(gc.ds$relserv)
gc.ds$relint <- scale(gc.ds$relint)
gc.ds$polaff <- scale(gc.ds$polaff)
```
# Testing Correlations between Religiosity and MF
```{r}
mod <- '
care =~ mfq5 + mfq6 + mfq9 + mfq18 + mfq19 + mfq20
fair =~ mfq7 + mfq13 + mfq14 + mfq22 + mfq27 + mfq31
group =~ mfq3 + mfq11 + mfq24 + mfq25 + mfq26
auth =~ mfq4 + mfq12 + mfq15 + mfq21 + mfq23 + mfq28
pure =~ mfq2 + mfq8 + mfq10 + mfq16 + mfq17 + mfq29

ag =~ a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9
bg =~ b1 + b2 + b3 + b4 + b5 + b6 + b7 + b8 + b9

SoTP =~ stp
prayer =~ pray
attend =~ relserv
interest =~ relint

pol =~ polaff
'
fit <- sem(mod, gc.ds, mimic = "Mplus", meanstructure = TRUE, std.lv = T, missing = "fiml")
summary(fit, standardized = TRUE, fit.measure = TRUE)
```
# Testing Effects of God Concept of MF
```{r}
# SEM
mod <- '
ind =~ mfq5 + mfq6 + mfq9 + mfq18 + mfq19 + mfq20 + mfq7 + mfq13 + mfq14 + mfq22 + mfq27 + mfq31
bind =~ mfq3 + mfq11 + mfq24 + mfq25 + mfq26 + mfq4 + mfq12 + mfq15 + mfq21 + mfq23 + mfq28 + mfq2 + mfq8 + mfq10 + mfq16 + mfq17 + mfq29

#ind ~ condB + stp + stp:condB
#bind ~ condB + stp + stp:condB

#ind ~ condB + stp + stp:condB
#bind ~ b1*condB + b2*stp + bint*stp:condB
#  auth.atheist := b1 + bint*-1
#  auth.agnostic := b1 + bint*0
#  auth.theist := b1 + bint*1


#ind ~ condB + polaff + polaff:condB
#bind ~ b1*condB + b2*polaff + bint*polaff:condB
#  auth.lib := b1 + bint*-1
#  auth.cons := b1 + bint*1


ind ~ condB + stp + stp:condB + polaff + polaff:condB
bind ~ b1*condB + b2*stp + b3*stp:condB + b4*polaff + b5*polaff:condB
  atheist := b1 + b3*-1
  theist := b1 + b3*1
  agnostic := b1 + b3*0
'
fit <- sem(mod, gc.ds, mimic = "Mplus", meanstructure = TRUE, missing = "fiml", std.lv = T)
summary(fit, standardized = TRUE, fit.measures = TRUE)
```
# Reliability Estimates
```{r}
care.mod <- '
care =~ mfq5 + mfq6 + mfq9 + mfq18 + mfq19 + mfq20
'
care.fit <- sem(care.mod, gc.ds, mimic = "Mplus", meanstructure = TRUE, std.lv = TRUE, missing = "fiml")
round(reliability(care.fit), digit = 3)

fair.mod <- '
fair =~ mfq7 + mfq13 + mfq14 + mfq22 + mfq27 + mfq31
'
fair.fit <- sem(fair.mod, gc.ds, mimic = "Mplus", meanstructure = TRUE, std.lv = TRUE, missing = "fiml")
round(reliability(fair.fit), digit = 3)

group.mod <- '
group =~ mfq3 + mfq11 + mfq24 + mfq25 + mfq26
'
group.fit <- sem(group.mod, gc.ds, mimic = "Mplus", meanstructure = TRUE, std.lv = TRUE, missing = "fiml")
round(reliability(group.fit), digit = 3)

auth.mod <- '
auth =~ mfq4 + mfq12 + mfq15 + mfq21 + mfq23 + mfq28
'
auth.fit <- sem(auth.mod, gc.ds, mimic = "Mplus", meanstructure = TRUE, std.lv = TRUE, missing = "fiml")
round(reliability(auth.fit), digit = 3)

pure.mod <- '
pure =~ mfq2 + mfq8 + mfq10 + mfq16 + mfq17 + mfq29
'
pure.fit <- sem(pure.mod, gc.ds, mimic = "Mplus", meanstructure = TRUE, std.lv = TRUE, missing = "fiml")
round(reliability(pure.fit), digit = 3)

ag.mod <- '
ag =~ a1 + a2 + a3 + a4 + a5 + a6 + a7 + a8 + a9
'
ag.fit <- sem(ag.mod, gc.ds, mimic = "Mplus", meanstructure = TRUE, std.lv = TRUE, missing = "fiml")
round(reliability(ag.fit), digit = 3)

bg.mod <- '
bg =~ b1 + b2 + b3 + b4 + b5 + b6 + b7 + b8 + b9
'
bg.fit <- sem(bg.mod, gc.ds, mimic = "Mplus", meanstructure = TRUE, std.lv = TRUE, missing = "fiml")
round(reliability(bg.fit), digit = 3)
```
